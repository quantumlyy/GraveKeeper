buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "com.wynprice.cursemaven:CurseMaven:1.2.3"
    }
}
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.wynprice.cursemaven"

// define the properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

group = "com.quantumlytangled.gravekeeper" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
version = "${config.minecraft_version}-${config.MAJORMOD}.${config.MAJORAPI}.${config.MINOR}.${config.PATCH}"
archivesBaseName = "GraveKeeper"

// Enforce Java version explicitly so eclipse task generates correctly.
sourceCompatibility = compileJava.sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = compileJava.targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    runDir = "run"
    
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "${config.mappings_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // replacing
    replace "@VERSION@", "${config.MAJORMOD}.${config.MAJORAPI}.${config.MINOR}.${config.PATCH}"
    replaceIn "GraveKeeper.java"
}

repositories {
    mavenCentral()
    maven { // Baubles
        name = "thiakil"
        url = "http://maven.thiakil.com"
    }
    maven { // JEI & Tinkers
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven { // JEI fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    ivy {
        name "GalacticraftCore"
        url "https://micdoodle8.com/new-builds/"
        layout 'pattern', {
            artifact "[organization]/${config.Galacticraft_build}/[module]-[revision].jar"
        }
        metadataSources {
            artifact()
        }
    }
//    mavenLocal()
}

dependencies {
    // You may put jars on which you depend on in ./libs or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // Real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    
    provided curse.resolve("the-aether", "${config.AetherLegacy_fileid}")
    // provided "botania:Botania:${config.Botania_version}"
    provided "com.azanor.baubles:Baubles:${config.Baubles_version}"
    provided curse.resolve("cosmetic-armor-reworked", "${config.CosmeticArmorReworked_fileid}")
    provided "GC-1.12-dev:GalacticraftCore-Dev:${config.Galacticraft_version}.${config.Galacticraft_build}"
    // provided "techguns:Techguns:${config.Techguns_version}"
    provided curse.resolve("techguns", "${config.Techguns_fileid}")
    provided curse.resolve("travelers-backpack", "${config.TravelersBackpack_fileid}")
    provided curse.resolve("random-things", "${config.RandomThings_fileid}")
    provided "slimeknights.mantle:Mantle:${config.Mantle_version}"
    provided "slimeknights:TConstruct:${config.TCon_version}"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    classifier = ''
    destinationDir = file 'output'
}

idea {
    module {
        inheritOutputDirs = true
    }
}

runClient {
    jvmArgs "-Xmx2048m", "-Xms1024m", "-ea"
}

runServer {
    jvmArgs "-Xmx2048m", "-Xms1024m", "-ea"
}